package com.teste.neliogodoi.fullstack.security;


import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.Builder;
import lombok.Data;
import lombok.RequiredArgsConstructor;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Collections;

@RequiredArgsConstructor
public class JWTLoginFilter extends AbstractAuthenticationProcessingFilter {
	
	@Data
	@Builder
	private class UserCredentials {
		private String username;
		private String password;
	}

    public JWTLoginFilter(String url, AuthenticationManager authManager) {
        super(new AntPathRequestMatcher(url));
        setAuthenticationManager(authManager);
    }

    @Override
    public Authentication attemptAuthentication( HttpServletRequest req, HttpServletResponse res)
    throws JsonParseException, JsonMappingException, IOException
    {	
    	UserCredentials credentials = new ObjectMapper()
				.readValue(req.getInputStream(), UserCredentials.class);

        return getAuthenticationManager().authenticate(
            new UsernamePasswordAuthenticationToken(
        		credentials.getUsername(),
        		credentials.getPassword(),
        		Collections.emptyList()
            )
        );
    }

    @Override
    protected void successfulAuthentication(
            HttpServletRequest req,
            HttpServletResponse res,
            FilterChain chain,
            Authentication auth
    ) throws IOException, ServletException {
        TokenAuthService.addAuthentication(res, auth.getName());
    }
}
